digraph Expr {
  node0 [shape="rect" label="Program
Cases"]
  node1 [label="VarDecl
x : integer"]
  node0 -> node1;
  node2 [label="VarDecl
s : string"]
  node0 -> node2;
  node3 [shape="rect" label="Procedure
Run"]
  node0 -> node3;
  node4 [label="VarDecl
x : integer"]
  node3 -> node4;
  node5 [label="VarDecl
s : string"]
  node3 -> node5;
  node6 [shape="rect" label="Block"]
  node3 -> node6;
  node7 [shape="rect" label="Switch"]
  node6 -> node7;
  node8 [label="Identifier
x"]
  node7 -> node8;
  node9 [shape="rect" label="Case"]
  node7 -> node9;
  node10 [label="Int
1"]
  node9 -> node10;
  node11 [shape="rect" label="WriteLn"]
  node9 -> node11;
  node12 [label="Int
1"]
  node11 -> node12;
  node13 [shape="rect" label="Case"]
  node7 -> node13;
  node14 [label="Int
2"]
  node13 -> node14;
  node15 [shape="rect" label="WriteLn"]
  node13 -> node15;
  node16 [label="Int
143"]
  node15 -> node16;
  node17 [shape="rect" label="Case"]
  node7 -> node17;
  node18 [label="Int
3"]
  node17 -> node18;
  node19 [shape="rect" label="WriteLn"]
  node17 -> node19;
  node20 [label="Int
88"]
  node19 -> node20;
  node21 [shape="rect" label="WriteLn"]
  node7 -> node21;
  node22 [label="String
None of the ints"]
  node21 -> node22;
  node23 [shape="rect" label="Switch"]
  node6 -> node23;
  node24 [label="Identifier
s"]
  node23 -> node24;
  node25 [shape="rect" label="Case"]
  node23 -> node25;
  node26 [label="String
banana"]
  node25 -> node26;
  node27 [shape="rect" label="Block"]
  node25 -> node27;
  node28 [shape="rect" label="WriteLn"]
  node27 -> node28;
  node29 [label="String
yellow"]
  node28 -> node29;
  node30 [shape="rect" label="Return"]
  node27 -> node30;
  node31 [shape="rect" label="Case"]
  node23 -> node31;
  node32 [label="String
mango"]
  node31 -> node32;
  node33 [shape="rect" label="Block"]
  node31 -> node33;
  node34 [shape="rect" label="WriteLn"]
  node33 -> node34;
  node35 [label="String
orange"]
  node34 -> node35;
  node36 [shape="rect" label="Return"]
  node33 -> node36;
  node37 [shape="rect" label="Case"]
  node23 -> node37;
  node38 [label="String
strawberry"]
  node37 -> node38;
  node39 [shape="rect" label="Block"]
  node37 -> node39;
  node40 [shape="rect" label="WriteLn"]
  node39 -> node40;
  node41 [label="String
red"]
  node40 -> node41;
  node42 [shape="rect" label="Return"]
  node39 -> node42;
  node43 [shape="rect" label="WriteLn"]
  node6 -> node43;
  node44 [label="String
Fell through fruit cases"]
  node43 -> node44;
  node45 [shape="rect" label="Return"]
  node6 -> node45;
  node46 [shape="rect" label="Function
AString
string"]
  node0 -> node46;
  node47 [shape="rect" label="Return"]
  node46 -> node47;
  node48 [label="String
strawberry"]
  node47 -> node48;
  node49 [shape="rect" label="Function
AnotherString
string"]
  node0 -> node49;
  node50 [shape="rect" label="Return"]
  node49 -> node50;
  node51 [label="String
apple"]
  node50 -> node51;
  node52 [shape="rect" label="Block"]
  node0 -> node52;
  node53 [shape="rect" label="Procedure Call
Run"]
  node52 -> node53;
  node54 [label="Int
1"]
  node53 -> node54;
  node55 [shape="rect" label="Function Call
AString"]
  node53 -> node55;
  node56 [shape="rect" label="Procedure Call
Run"]
  node52 -> node56;
  node57 [label="Int
3"]
  node56 -> node57;
  node58 [shape="rect" label="Function Call
AnotherString"]
  node56 -> node58;
  node59 [shape="rect" label="Procedure Call
Run"]
  node52 -> node59;
  node60 [label="Int
5"]
  node59 -> node60;
  node61 [label="String
mango"]
  node59 -> node61;
  node62 [shape="rect" label="Procedure Call
Run"]
  node52 -> node62;
  node63 [label="Int
0"]
  node62 -> node63;
  node64 [label="String
banananana"]
  node62 -> node64;
}
